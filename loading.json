{"v":"5.4.3","fr":30,"ip":0,"op":120,"w":1540,"h":866,"nm":"logo素材_solo","ddd":1,"assets":[{"id":"image_0","w":1540,"h":866,"u":"images/","p":"img_0.png","e":0},{"id":"image_1","w":1540,"h":866,"u":"images/","p":"img_1.png","e":0},{"id":"image_2","w":1540,"h":866,"u":"images/","p":"img_2.png","e":0},{"id":"image_3","w":1540,"h":866,"u":"images/","p":"img_3.png","e":0}],"fonts":{"list":[{"fName":"CarlMarx-Bold","fFamily":"CarlMarx","fStyle":"Bold","ascent":80.1816311465259}]},"layers":[{"ddd":0,"ind":1,"ty":5,"nm":"...","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[1094.369,482,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":160,"f":"CarlMarx-Bold","t":"...","j":2,"tr":0,"lh":192,"ls":0,"fc":[1,1,1]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[{"nm":"アニメーター 1","s":{"t":0,"xe":{"a":0,"k":0,"ix":7},"ne":{"a":0,"k":0,"ix":8},"a":{"a":0,"k":100,"ix":4},"b":1,"rn":0,"sh":1,"s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":59,"s":[0],"e":[100]},{"t":90}],"ix":1},"r":1},"a":{"o":{"a":0,"k":0,"ix":9}}}]},"ip":59,"op":5274,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":5,"nm":"SHAPES","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[850,495,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":5,"nm":"AC IN [KZK] Controls","np":4,"mn":"Pseudo/MHAC PrCtrl KZK 4","ix":1,"en":1,"ef":[{"ty":3,"nm":"Position","mn":"Pseudo/MHAC PrCtrl KZK 4-0001","ix":1,"v":{"a":0,"k":[0,0],"ix":1}},{"ty":3,"nm":"Scale","mn":"Pseudo/MHAC PrCtrl KZK 4-0002","ix":2,"v":{"a":0,"k":[0,0],"ix":2}}]}],"t":{"d":{"k":[{"s":{"s":160,"f":"CarlMarx-Bold","t":"SHAPES","j":2,"tr":0,"lh":192,"ls":0,"fc":[1,1,1]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acValAvg(val) {\n        acAccAvgC = sum(acAccAvgC, 1);\n        if (acAccAvgW === null) {\n            acAccAvg = sum(acAccAvg, val);\n        } else {\n            acAccAvg = sum(acAccAvg, mul(val, acAccAvgW));\n            acAccAvgWC++;\n        }\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = div(sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = div(sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccAvg = 0;\n    var acAccAvgC = 0;\n    var acAccAvgW = null;\n    var acAccAvgWC = 0;\n    if (tTrI !== null && tTrO !== null && tTrI > tTrO) {\n        acAccAvgW = div(sub(t, tTrO), sub(tTrI, tTrO));\n        if (acAccAvgW < 0) {\n            acAccAvgW = 0;\n        }\n        if (acAccAvgW > 1) {\n            acAccAvgW = 1;\n        }\n        acAccAvgW = sub(1, acAccAvgW);\n    } else {\n        acAccAvgW = null;\n    }\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = sub(1, ac.fade);\n    }\n    acPD('AC IN [KZK] Controls');\n    if (ac.en) {\n        acValAvg([\n            0,\n            0\n        ]);\n    }\n    v = thisProperty.value;\n    if (acAccAvgWC > 1) {\n        acAccAvgC--;\n    }\n    if (acAccAvgC > 0) {\n        v = sum(v, div(acAccAvg, acAccAvgC));\n    }\n    return v;\n}\n$bm_rt = result;"}},"a":[{"nm":"AC IN [KZK] Animator 1","s":{"t":0,"xe":{"a":0,"k":0,"ix":7},"ne":{"a":0,"k":-100,"ix":8},"a":{"a":0,"k":100,"ix":4},"b":3,"rn":0,"sh":2,"o":{"a":0,"k":-100,"ix":3,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acValAdd(val) {\n        acAccA = sum(acAccA, val);\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = div(sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = div(sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = sub(1, ac.fade);\n    }\n    acPD('AC IN [KZK] Controls');\n    if (ac.en) {\n        acValAdd(mul(200, ac.fade));\n    }\n    v = thisProperty.value;\n    v = sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"},"r":1},"a":{"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValSet(val) {\n        v = val;\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValSet(acPointValP('AC IN [KZK] Controls', 'Position', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"},"s":{"a":0,"k":[0,0,100],"ix":3,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValSet(val) {\n        v = val;\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValSet(acPointValP('AC IN [KZK] Controls', 'Scale', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"}}}]},"ip":17,"op":5291,"st":17,"bm":0},{"ddd":1,"ind":3,"ty":2,"nm":"緑","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[769.725,432.97,0],"ix":2},"a":{"a":0,"k":[769.725,432.97,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValMul(val) {\n        acAccM *= val;\n    }\n    function elasticBounce(t, firstBounce, elasticity, maxBounces) {\n        var e, fd, fdi, g, vy, nMax, tCur, segDur, tNext, nb, delta, y;\n        if (t > 1) {\n            t = 1;\n        }\n        if (t < 0) {\n            t = 0;\n        }\n        if (typeof firstBounce == 'undefined') {\n            firstBounce = 0.15;\n        }\n        if (typeof elasticity == 'undefined') {\n            elasticity = 0.75;\n        }\n        if (typeof maxBounces == 'undefined') {\n            maxBounces = 9;\n        }\n        e = elasticity;\n        fd = mul(firstBounce, 2);\n        t = sub(t, firstBounce);\n        t = sub(1, t);\n        fdi = div(1, fd);\n        g = mul(mul(8, fdi), fdi);\n        vy = mul(mul(fd, g), 0.5);\n        nMax = maxBounces;\n        tCur = 0;\n        segDur = div(mul(2, vy), g);\n        tNext = segDur;\n        nb = 0;\n        while (tNext < t && nb <= nMax) {\n            vy *= e;\n            segDur *= e;\n            tCur = tNext;\n            tNext = sum(tNext, segDur);\n            nb++;\n        }\n        if (nb <= nMax) {\n            delta = sub(t, tCur);\n            y = mul(delta, sub(vy, div(mul(g, delta), 2)));\n            if (y > 1) {\n                y = 1;\n            }\n            if (y < 0) {\n                y = 0;\n            }\n        } else {\n            y = 0;\n        }\n        return y;\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = div(sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = div(sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccM = 1;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = sub(1, ac.fade);\n    }\n    acPD('AC IN [WZI] Controls');\n    if (ac.en) {\n        acValMul(sub(1, mul(elasticBounce(ac.fade, 0.45, 0.4, 3), sum(div(acSliderValP('AC IN [WZI] Controls', 'Scale', 0), -100), 1))));\n    }\n    v = thisProperty.value;\n    v *= acAccM;\n    return v;\n}\n$bm_rt = result;"}},"ao":0,"ef":[{"ty":5,"nm":"AC IN [WZI] Controls","np":3,"mn":"Pseudo/MHAC PrCtrl WZI 4","ix":1,"en":1,"ef":[{"ty":0,"nm":"Scale","mn":"Pseudo/MHAC PrCtrl WZI 4-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]}],"ip":0,"op":5274,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":2,"nm":"水色","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = sum(acAccA, val);\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = div(mul(a, Math.cos(mul(mul(mul(t, f), Math.PI), 2))), Math.exp(mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return mul(y, sub(1, div(sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = div(sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = div(sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = sub(1, ac.fade);\n    }\n    acPD('AC IN [4LC] Controls');\n    if (ac.en) {\n        acValAdd(mul(acAngleValP('AC IN [4LC] Controls', 'Angle', 100), mhOvershoot(sub(1, ac.fade), 1, acSliderValP('AC IN [4LC] Controls', 'Bounces', 1), 7)));\n    }\n    v = thisProperty.value;\n    v = sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"},"p":{"a":0,"k":[769.725,432.97,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = sum(acAccA, val);\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = div(mul(a, Math.cos(mul(mul(mul(t, f), Math.PI), 2))), Math.exp(mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return mul(y, sub(1, div(sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = div(sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = div(sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = sub(1, ac.fade);\n    }\n    acPD('AC IN [4LC] Controls');\n    if (ac.en) {\n        acValAdd(mul(acPointValP('AC IN [4LC] Controls', 'Position', [\n            0,\n            1000\n        ]), mhOvershoot(sub(1, ac.fade), 1, acSliderValP('AC IN [4LC] Controls', 'Bounces', 1), 7)));\n    }\n    v = thisProperty.value;\n    v = sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"},"a":{"a":0,"k":[769.725,432.97,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":5,"nm":"AC IN [4LC] Controls","np":5,"mn":"Pseudo/MHAC PrCtrl 4LC 3","ix":1,"en":1,"ef":[{"ty":3,"nm":"Position","mn":"Pseudo/MHAC PrCtrl 4LC 3-0001","ix":1,"v":{"a":0,"k":[0,1000],"ix":1}},{"ty":0,"nm":"Angle","mn":"Pseudo/MHAC PrCtrl 4LC 3-0002","ix":2,"v":{"a":0,"k":100,"ix":2}},{"ty":0,"nm":"Bounces","mn":"Pseudo/MHAC PrCtrl 4LC 3-0003","ix":3,"v":{"a":0,"k":1,"ix":3}}]}],"ip":0,"op":5274,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":2,"nm":"黄色","refId":"image_2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = sum(acAccA, val);\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = div(mul(a, Math.cos(mul(mul(mul(t, f), Math.PI), 2))), Math.exp(mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return mul(y, sub(1, div(sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = div(sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = div(sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = sub(1, ac.fade);\n    }\n    acPD('AC IN [8ZD] Controls');\n    if (ac.en) {\n        acValAdd(mul(acAngleValP('AC IN [8ZD] Controls', 'Angle', 100), mhOvershoot(sub(1, ac.fade), 1, acSliderValP('AC IN [8ZD] Controls', 'Bounces', 1), 7)));\n    }\n    v = thisProperty.value;\n    v = sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"},"p":{"a":0,"k":[769.725,432.97,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = sum(acAccA, val);\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = div(mul(a, Math.cos(mul(mul(mul(t, f), Math.PI), 2))), Math.exp(mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return mul(y, sub(1, div(sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = div(sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = div(sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = sub(1, ac.fade);\n    }\n    acPD('AC IN [8ZD] Controls');\n    if (ac.en) {\n        acValAdd(mul(acPointValP('AC IN [8ZD] Controls', 'Position', [\n            1800,\n            0\n        ]), mhOvershoot(sub(1, ac.fade), 1, acSliderValP('AC IN [8ZD] Controls', 'Bounces', 1), 7)));\n    }\n    v = thisProperty.value;\n    v = sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"},"a":{"a":0,"k":[769.725,432.97,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":5,"nm":"AC IN [8ZD] Controls","np":5,"mn":"Pseudo/MHAC PrCtrl 8ZD 3","ix":1,"en":1,"ef":[{"ty":3,"nm":"Position","mn":"Pseudo/MHAC PrCtrl 8ZD 3-0001","ix":1,"v":{"a":0,"k":[1800,0],"ix":1}},{"ty":0,"nm":"Angle","mn":"Pseudo/MHAC PrCtrl 8ZD 3-0002","ix":2,"v":{"a":0,"k":100,"ix":2}},{"ty":0,"nm":"Bounces","mn":"Pseudo/MHAC PrCtrl 8ZD 3-0003","ix":3,"v":{"a":0,"k":1,"ix":3}}]}],"ip":0,"op":5274,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":2,"nm":"ピンク","refId":"image_3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = sum(acAccA, val);\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = div(mul(a, Math.cos(mul(mul(mul(t, f), Math.PI), 2))), Math.exp(mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return mul(y, sub(1, div(sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = div(sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = div(sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = sub(1, ac.fade);\n    }\n    acPD('AC IN [T6A] Controls');\n    if (ac.en) {\n        acValAdd(mul(acAngleValP('AC IN [T6A] Controls', 'Angle', -100), mhOvershoot(sub(1, ac.fade), 1, acSliderValP('AC IN [T6A] Controls', 'Bounces', 1), 7)));\n    }\n    v = thisProperty.value;\n    v = sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"},"p":{"a":0,"k":[768.725,431.97,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = sum(acAccA, val);\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = div(mul(a, Math.cos(mul(mul(mul(t, f), Math.PI), 2))), Math.exp(mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return mul(y, sub(1, div(sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = div(sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = div(sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = sub(1, ac.fade);\n    }\n    acPD('AC IN [T6A] Controls');\n    if (ac.en) {\n        acValAdd(mul(acPointValP('AC IN [T6A] Controls', 'Position', [\n            0,\n            -1000\n        ]), mhOvershoot(sub(1, ac.fade), 1, acSliderValP('AC IN [T6A] Controls', 'Bounces', 1), 7)));\n    }\n    v = thisProperty.value;\n    v = sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"},"a":{"a":0,"k":[769.725,432.97,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":5,"nm":"AC IN [T6A] Controls","np":5,"mn":"Pseudo/MHAC PrCtrl T6A 3","ix":1,"en":1,"ef":[{"ty":3,"nm":"Position","mn":"Pseudo/MHAC PrCtrl T6A 3-0001","ix":1,"v":{"a":0,"k":[0,-1000],"ix":1}},{"ty":0,"nm":"Angle","mn":"Pseudo/MHAC PrCtrl T6A 3-0002","ix":2,"v":{"a":0,"k":-100,"ix":2}},{"ty":0,"nm":"Bounces","mn":"Pseudo/MHAC PrCtrl T6A 3-0003","ix":3,"v":{"a":0,"k":1,"ix":3}}]}],"ip":0,"op":5274,"st":0,"bm":0}],"markers":[],"chars":[{"ch":"S","size":160,"style":"Bold","w":38.4,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-10.876,0],[0,15.71],[6.747,5.136],[0,0],[0,3.726],[-2.417,0],[0,-3.525],[0,0],[-3.424,0],[0,3.525],[0,0],[8.862,0],[0,-10.474],[-6.244,-4.733],[0,0],[-1.108,-3.021],[0,-2.719],[0.705,-1.813],[1.712,0],[0,4.532],[-0.705,2.417],[3.323,0.604],[1.611,-3.928],[0,-3.928]],"o":[[11.38,0],[0,-10.574],[0,0],[-3.625,-2.719],[0,-3.223],[2.316,0],[0,0],[0,3.726],[3.223,0],[0,0],[0,-10.977],[-9.769,0],[0,7.855],[0,0],[3.625,2.719],[0.604,1.712],[0,2.921],[-0.906,2.115],[-2.618,0],[0,-3.827],[1.108,-3.726],[-3.223,-0.604],[-1.007,2.518],[0,10.474]],"v":[[18.933,1.813],[36.356,-21.35],[25.278,-44.11],[20.947,-47.433],[16.013,-55.792],[19.94,-60.928],[23.566,-55.893],[23.566,-55.188],[29.306,-49.246],[34.845,-55.188],[34.845,-56.396],[19.739,-71.704],[3.726,-55.289],[13.495,-37.161],[16.315,-35.046],[23.062,-26.889],[24.069,-19.638],[22.961,-11.984],[18.933,-9.164],[14.2,-15.509],[15.71,-23.465],[11.481,-30.515],[3.625,-25.58],[2.115,-15.71]],"c":true},"ix":2},"nm":"S","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"S","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"CarlMarx"},{"ch":"H","size":160,"style":"Bold","w":42.6,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.424,0],[0,-3.424],[0,0],[0,0],[0,0],[3.424,0],[0,-3.424],[0,0],[-3.424,0],[0,3.424],[0,0],[0,0],[0,0],[-3.424,0],[0,3.424],[0,0]],"o":[[-3.424,0],[0,0],[0,0],[0,0],[0,-3.424],[-3.424,0],[0,0],[0,3.424],[3.424,0],[0,0],[0,0],[0,0],[0,3.424],[3.424,0],[0,0],[0,-3.424]],"v":[[31.723,-71.301],[25.58,-65.158],[25.58,-43.707],[17.322,-43.707],[17.322,-65.158],[11.179,-71.301],[5.035,-65.158],[5.035,-5.136],[11.179,1.007],[17.322,-5.136],[17.322,-31.824],[25.58,-31.824],[25.58,-5.136],[31.723,1.007],[37.866,-5.136],[37.866,-65.158]],"c":true},"ix":2},"nm":"H","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"H","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"CarlMarx"},{"ch":"A","size":160,"style":"Bold","w":42,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[10.474,0],[0,-11.984],[0,0],[-3.424,0],[0,3.424],[0,0],[0,0],[0,0],[-3.424,0],[0,3.424],[0,0]],"o":[[-10.474,0],[0,0],[0,3.424],[3.424,0],[0,0],[0,0],[0,0],[0,3.424],[3.424,0],[0,0],[0,-11.984]],"v":[[21.149,-71.906],[4.733,-53.778],[4.733,-5.136],[10.876,1.007],[17.02,-5.136],[17.02,-23.062],[25.278,-23.062],[25.278,-5.136],[31.421,1.007],[37.564,-5.136],[37.564,-53.778]],"c":true},"ix":2},"nm":"A","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-2.719,0],[0,-4.733],[0,0]],"o":[[0,0],[0,-4.733],[2.719,0],[0,0],[0,0]],"v":[[17.02,-34.442],[17.02,-53.577],[21.149,-60.223],[25.278,-53.577],[25.278,-34.442]],"c":true},"ix":2},"nm":"A","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"A","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"CarlMarx"},{"ch":"P","size":160,"style":"Bold","w":40,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.424,0],[0,3.424],[0,0],[0,0],[0,10.272],[0,0],[10.977,0],[0,0],[0,-4.834],[0,0]],"o":[[3.424,0],[0,0],[0,0],[10.071,0],[0,0],[0,-10.272],[0,0],[-5.74,0],[0,0],[0,3.424]],"v":[[11.078,1.007],[17.12,-5.136],[17.12,-18.027],[21.048,-18.027],[37.262,-34.946],[37.262,-53.577],[20.746,-70.898],[13.293,-70.898],[5.035,-62.943],[5.035,-5.136]],"c":true},"ix":2},"nm":"P","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,-6.345],[0,0],[3.827,0]],"o":[[0,0],[0,0],[3.323,0],[0,0],[0,6.647],[0,0]],"v":[[17.12,-28.601],[17.12,-60.324],[20.142,-60.324],[25.278,-51.562],[25.278,-38.37],[19.739,-28.601]],"c":true},"ix":2},"nm":"P","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"P","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"CarlMarx"},{"ch":"E","size":160,"style":"Bold","w":35.9,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-5.338,0],[0,0],[0,3.323],[3.323,0],[0,0],[0,0],[0,0],[0,3.323],[3.323,0],[0,0],[0,0],[0,0],[0,3.323],[3.323,0],[0,0],[0,-5.237],[0,0]],"o":[[0,0],[3.323,0],[0,-3.323],[0,0],[0,0],[0,0],[3.323,0],[0,-3.323],[0,0],[0,0],[0,0],[3.323,0],[0,-3.323],[0,0],[-5.338,0],[0,0],[0,5.237]],"v":[[13.293,1.007],[27.493,1.007],[33.435,-4.935],[27.493,-10.876],[17.12,-10.876],[17.12,-32.629],[25.983,-32.629],[31.924,-38.571],[25.983,-44.513],[17.12,-44.513],[17.12,-59.015],[27.493,-59.015],[33.435,-64.957],[27.493,-70.898],[13.293,-70.898],[5.035,-62.943],[5.035,-6.949]],"c":true},"ix":2},"nm":"E","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"E","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"CarlMarx"},{"ch":".","size":160,"style":"Bold","w":20,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.23,0],[0,4.23],[4.23,0],[0,-4.23]],"o":[[4.23,0],[0,-4.23],[-4.23,0],[0,4.23]],"v":[[10.071,2.014],[17.624,-5.539],[10.071,-13.092],[2.518,-5.539]],"c":true},"ix":2},"nm":".","mn":"ADBE Vector Shape - Group","hd":false}],"nm":".","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"CarlMarx"}]}